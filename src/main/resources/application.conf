akka {
    loglevel = DEBUG
}

mySpecialConfig {
    akka {
        loglevel = DEBUG
    }
}

specialTimedAssertionConfig {
    akka.test.single-expect-default = 0.3s
}

interceptingLogMessages {
    akka {
        loggers = ["akka.testkit.TestEventListener"]
    }
}

routersDemo {
    akka {
        actor.deployment {
            /poolMaster2 {
                router = round-robin-pool
                nr-of-instances = 5
            }
            /groupMaster2 {
                router = round-robin-group
                routees.paths = ["/user/slave-1", "/user/slave-2", "/user/slave-3", "/user/slave-4", "/user/slave-5"]
            }
        }
    }
}

my-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
        fixes-pool-size = 3
    }
    throughput = 30
}

dispatcherDemo {
    akka.actor.deployment {
        /rtjvm {
            dispatcher = my-dispatcher
        }
    }
}



mailboxesDemo {

    support-ticket-dispatcher {
        mailbox-type = "part5infra.Mailboxes$SupportTickerPriorityMailbox"
    }

    control-mailbox {
        mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
    }

    akka.actor.deployment {
        /altControlAwareActor {
            mailbox = control-mailbox
        }
    }
}